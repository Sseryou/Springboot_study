server.port=3000

# 라이브 리로드
spring.devtools.livereload.enabled=true

# 타임리프
# 캐시부분 개발시에만 false, 서비스시 true
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=file:src/main/resources/templates/

# 정적 자원(css, js)
spring.resources.static-locations=file:src/main/resources/static/

# 파일 업로드 설정
spring.servlet.multipart.maxFileSize=20MB
spring.servlet.multipart.maxRequestSize=60MB

# 스프링 Data JPA 설정
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.username=SPRINGJPA2
spring.datasource.password=aA123456
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:orcl

# 실행되는 쿼리문 콘솔 출력
spring.jpa.properties.hibernate.show_sql=true

# 콘솔 창에 출력되는 쿼리문을 가독성 좋게 포맷팅
spring.jpa.properties.hibernate.format_sql=true

# 쿼리에 물음표로 출력되는 바인드 파라미터 출력
logging.level.org.hibernate.type.descriptor.sql=trace
#logging.level.org.hibernate=debug
logging.level.org.hibernate.type=trace

#create, update...
spring.jpa.hibernate.ddl-auto=create
#Jpa에서 객체지향을 이용해 설계한 DB를 지정한 DB 형식으로 전환해서 넣어줌
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
